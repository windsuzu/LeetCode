// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 48;
	objects = {

/* Begin PBXFileReference section */
		F9050C431FB0847E00B4370B /* #20. Valid Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#20. Valid Parentheses.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F90B7DC71FB41D7E00D3BF28 /* #67. Add Binary.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#67. Add Binary.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9256B2F1FADB860002E24B4 /* #438. Find All Anagrams in a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#438. Find All Anagrams in a String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9584B671FAC0F5200D76BF3 /* #183. Customers Who Never Order.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#183. Customers Who Never Order.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9943DC21FB164D800C7705E /* #111. Minimum Depth of Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#111. Minimum Depth of Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9A5F8501FAAD3B200A306EA /* LeetCode.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = LeetCode.app; sourceTree = BUILT_PRODUCTS_DIR; };
		F9A5F85F1FAAD3B200A306EA /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		F9A5F8651FAAD41700A306EA /* #205. Isomorphic Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#205. Isomorphic Strings.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B650061FAAF49F00EB783A /* #182. Duplicate Emails.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#182. Duplicate Emails.playground"; sourceTree = "<group>"; };
		F9B650071FAAF49F00EB783A /* #83. Remove Duplicates from Sorted List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#83. Remove Duplicates from Sorted List.playground"; sourceTree = "<group>"; };
		F9B650081FAAF49F00EB783A /* #217. Contains Duplicate.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#217. Contains Duplicate.playground"; sourceTree = "<group>"; };
		F9B650091FAAF49F00EB783A /* #342. Power of Four.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#342. Power of Four.playground"; sourceTree = "<group>"; };
		F9B6500A1FAAF49F00EB783A /* #383. Ransom Note.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#383. Ransom Note.playground"; sourceTree = "<group>"; };
		F9B6500B1FAAF49F00EB783A /* #107. Binary Tree Level Order Traversal II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#107. Binary Tree Level Order Traversal II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B6500C1FAAF49F00EB783A /* #496. Next Greater Element I.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#496. Next Greater Element I.playground"; sourceTree = "<group>"; };
		F9B6500D1FAAF49F00EB783A /* #121. Best Time to Buy and Sell Stock.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#121. Best Time to Buy and Sell Stock.playground"; sourceTree = "<group>"; };
		F9B6500E1FAAF49F00EB783A /* #231. Power of Two.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#231. Power of Two.playground"; sourceTree = "<group>"; };
		F9B6500F1FAAF49F00EB783A /* #506. Relative Ranks.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#506. Relative Ranks.playground"; sourceTree = "<group>"; };
		F9B650101FAAF49F00EB783A /* #541. Reverse String II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#541. Reverse String II.playground"; sourceTree = "<group>"; };
		F9B650111FAAF49F00EB783A /* #459. Repeated Substring Pattern.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#459. Repeated Substring Pattern.playground"; sourceTree = "<group>"; };
		F9B650121FAAF4A000EB783A /* #326. Power of Three.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#326. Power of Three.playground"; sourceTree = "<group>"; };
		F9B650131FAAF4A000EB783A /* #455. Assign Cookies.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#455. Assign Cookies.playground"; sourceTree = "<group>"; };
		F9B650141FAAF4A000EB783A /* #453. Minimum Moves to Equal Array Elements.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#453. Minimum Moves to Equal Array Elements.playground"; sourceTree = "<group>"; };
		F9B650151FAAF4A000EB783A /* #412. Fizz Buzz.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#412. Fizz Buzz.playground"; sourceTree = "<group>"; };
		F9B650161FAAF4A000EB783A /* #344. Reverse String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#344. Reverse String.playground"; sourceTree = "<group>"; };
		F9B650171FAAF4A000EB783A /* #371. Sum of Two Integers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#371. Sum of Two Integers.playground"; sourceTree = "<group>"; };
		F9B650181FAAF4A000EB783A /* #171. Excel Sheet Column Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#171. Excel Sheet Column Number.playground"; sourceTree = "<group>"; };
		F9B650191FAAF4A000EB783A /* #405. Convert a Number to Hexadecimal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#405. Convert a Number to Hexadecimal.playground"; sourceTree = "<group>"; };
		F9B6501A1FAAF4A100EB783A /* #110. Balanced Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#110. Balanced Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B6501B1FAAF4A100EB783A /* #167. Two Sum II - Input array is sorted.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#167. Two Sum II - Input array is sorted.playground"; sourceTree = "<group>"; };
		F9B6501C1FAAF4A100EB783A /* #257. Binary Tree Paths.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#257. Binary Tree Paths.playground"; sourceTree = "<group>"; };
		F9B6501D1FAAF4A100EB783A /* #283. Move Zeroes.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#283. Move Zeroes.playground"; sourceTree = "<group>"; };
		F9B6501E1FAAF4A100EB783A /* #501. Find Mode in Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#501. Find Mode in Binary Search Tree.playground"; sourceTree = "<group>"; };
		F9B6501F1FAAF4A200EB783A /* #226. Invert Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#226. Invert Binary Tree.playground"; sourceTree = "<group>"; };
		F9B650201FAAF4A200EB783A /* #461. Hamming distance.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#461. Hamming distance.playground"; sourceTree = "<group>"; };
		F9B650211FAAF4A200EB783A /* #561. Array Partition I.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#561. Array Partition I.playground"; sourceTree = "<group>"; };
		F9B650221FAAF4A200EB783A /* #606. Construct String from Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#606. Construct String from Binary Tree.playground"; sourceTree = "<group>"; };
		F9B650231FAAF4A300EB783A /* #671. Second Minimum Node In a Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#671. Second Minimum Node In a Binary Tree.playground"; sourceTree = "<group>"; };
		F9B650241FAAF4A300EB783A /* #661. Image Smoother.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#661. Image Smoother.playground"; sourceTree = "<group>"; };
		F9B650251FAAF4A300EB783A /* #520. Detect Capital.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#520. Detect Capital.playground"; sourceTree = "<group>"; };
		F9B650261FAAF4A300EB783A /* #594. Longest Harmonious Subsequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#594. Longest Harmonious Subsequence.playground"; sourceTree = "<group>"; };
		F9B650271FAAF4A300EB783A /* #9. Palindrome Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#9. Palindrome Number.playground"; sourceTree = "<group>"; };
		F9B650281FAAF4A400EB783A /* #350. Intersection of Two Arrays II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#350. Intersection of Two Arrays II.playground"; sourceTree = "<group>"; };
		F9B650291FAAF4A400EB783A /* #268. Missing Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#268. Missing Number.playground"; sourceTree = "<group>"; };
		F9B6502A1FAAF4A400EB783A /* #557. Reverse Words in a String III.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#557. Reverse Words in a String III.playground"; sourceTree = "<group>"; };
		F9B6502B1FAAF4A400EB783A /* #175. Combine Two Tables.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#175. Combine Two Tables.playground"; sourceTree = "<group>"; };
		F9B6502C1FAAF4A400EB783A /* #657. Judge Route Circle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#657. Judge Route Circle.playground"; sourceTree = "<group>"; };
		F9B6502D1FAAF4A500EB783A /* #401. Binary Watch.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#401. Binary Watch.playground"; sourceTree = "<group>"; };
		F9B6502E1FAAF4A500EB783A /* #598. Range Addition II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#598. Range Addition II.playground"; sourceTree = "<group>"; };
		F9B6502F1FAAF4A500EB783A /* #415. Add Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#415. Add Strings.playground"; sourceTree = "<group>"; };
		F9B650301FAAF4A500EB783A /* #485. Max Consecutive Ones.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#485. Max Consecutive Ones.playground"; sourceTree = "<group>"; };
		F9B650311FAAF4A500EB783A /* #551. Student Attendance Record I.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#551. Student Attendance Record I.playground"; sourceTree = "<group>"; };
		F9B650321FAAF4A600EB783A /* #13. Roman to Integer.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#13. Roman to Integer.playground"; sourceTree = "<group>"; };
		F9B650331FAAF4A600EB783A /* #404. Sum of Left Leaves.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#404. Sum of Left Leaves.playground"; sourceTree = "<group>"; };
		F9B650341FAAF4A600EB783A /* #122. Best Time to Buy and Sell Stock II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#122. Best Time to Buy and Sell Stock II.playground"; sourceTree = "<group>"; };
		F9B650351FAAF4A600EB783A /* #38. Count and Say.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#38. Count and Say.playground"; sourceTree = "<group>"; };
		F9B650361FAAF4A600EB783A /* #599. Minimum Index Sum of Two Lists.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#599. Minimum Index Sum of Two Lists.playground"; sourceTree = "<group>"; };
		F9B650371FAAF4A700EB783A /* #202. Happy Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#202. Happy Number.playground"; sourceTree = "<group>"; };
		F9B650381FAAF4A700EB783A /* #53. Maximum Subarray.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#53. Maximum Subarray.playground"; sourceTree = "<group>"; };
		F9B650391FAAF4A700EB783A /* #136. Single Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#136. Single Number.playground"; sourceTree = "<group>"; };
		F9B6503A1FAAF4A700EB783A /* #447. Number of Boomerangs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#447. Number of Boomerangs.playground"; sourceTree = "<group>"; };
		F9B6503B1FAAF4A700EB783A /* #538. Convert BST to Greater Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#538. Convert BST to Greater Tree.playground"; sourceTree = "<group>"; };
		F9B6503C1FAAF4A700EB783A /* #441. Arranging Coins.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#441. Arranging Coins.playground"; sourceTree = "<group>"; };
		F9B6503D1FAAF4A800EB783A /* #572. Subtree of Another Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#572. Subtree of Another Tree.playground"; sourceTree = "<group>"; };
		F9B6503E1FAAF4A800EB783A /* #104. Maximum Depth of Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#104. Maximum Depth of Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B6503F1FAAF4A800EB783A /* #70. Climbing Stairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#70. Climbing Stairs.playground"; sourceTree = "<group>"; };
		F9B650401FAAF4A800EB783A /* #172. Factorial Trailing Zeroes.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#172. Factorial Trailing Zeroes.playground"; sourceTree = "<group>"; };
		F9B650411FAAF4A800EB783A /* #530. Minimum Absolute Difference in BST.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#530. Minimum Absolute Difference in BST.playground"; sourceTree = "<group>"; };
		F9B650421FAAF4A800EB783A /* #463. Island Perimeter.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#463. Island Perimeter.playground"; sourceTree = "<group>"; };
		F9B650431FAAF4A900EB783A /* #101. Symmetric Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#101. Symmetric Tree.playground"; sourceTree = "<group>"; };
		F9B650441FAAF4A900EB783A /* #476. Number Complement.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#476. Number Complement.playground"; sourceTree = "<group>"; };
		F9B650451FAAF4A900EB783A /* #617. Merge Two Binary Trees.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#617. Merge Two Binary Trees.playground"; sourceTree = "<group>"; };
		F9B650461FAAF4A900EB783A /* #563. Binary Tree Tilt.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#563. Binary Tree Tilt.playground"; sourceTree = "<group>"; };
		F9B650471FAAF4A900EB783A /* #389. Find the Difference.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#389. Find the Difference.playground"; sourceTree = "<group>"; };
		F9B650481FAAF4AA00EB783A /* #458. Poor Pigs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#458. Poor Pigs.playground"; sourceTree = "<group>"; };
		F9B650491FAAF4AA00EB783A /* #643. Maximum Average Subarray I.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#643. Maximum Average Subarray I.playground"; sourceTree = "<group>"; };
		F9B6504A1FAAF4AA00EB783A /* #169. Majority Element.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#169. Majority Element.playground"; sourceTree = "<group>"; };
		F9B6504B1FAAF4AA00EB783A /* #198. House Robber.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#198. House Robber.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B6504C1FAAF4AA00EB783A /* #504. Base 7.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#504. Base 7.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B6504D1FAAF4AA00EB783A /* #409. Longest Palindrome.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#409. Longest Palindrome.playground"; sourceTree = "<group>"; };
		F9B6504E1FAAF4AB00EB783A /* #119. Pascal's Triangle II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#119. Pascal's Triangle II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B6504F1FAAF4AB00EB783A /* #21. Merge Two Sorted Lists.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#21. Merge Two Sorted Lists.playground"; sourceTree = "<group>"; };
		F9B650501FAAF4AB00EB783A /* #367. Valid Perfect Square.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#367. Valid Perfect Square.playground"; sourceTree = "<group>"; };
		F9B650511FAAF4AB00EB783A /* #500. Keyboard Row.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#500. Keyboard Row.playground"; sourceTree = "<group>"; };
		F9B650521FAAF4AB00EB783A /* #263. Ugly Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#263. Ugly Number.playground"; sourceTree = "<group>"; };
		F9B650531FAAF4AC00EB783A /* #387. First Unique Character in a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#387. First Unique Character in a String.playground"; sourceTree = "<group>"; };
		F9B650541FAAF4AC00EB783A /* #292. Nim Game.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#292. Nim Game.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B650551FAAF4AD00EB783A /* #66. Plus One.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#66. Plus One.playground"; sourceTree = "<group>"; };
		F9B650561FAAF4AE00EB783A /* #437. Path Sum III.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#437. Path Sum III.playground"; sourceTree = "<group>"; };
		F9B650571FAAF4AE00EB783A /* #543. Diameter of Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#543. Diameter of Binary Tree.playground"; sourceTree = "<group>"; };
		F9B650581FAAF4AE00EB783A /* #575. Distribute Candies.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#575. Distribute Candies.playground"; sourceTree = "<group>"; };
		F9B650591FAAF4AE00EB783A /* #637. Average of Levels in Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#637. Average of Levels in Binary Tree.playground"; sourceTree = "<group>"; };
		F9B6505A1FAAF4AF00EB783A /* #627. Swap Salary.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#627. Swap Salary.playground"; sourceTree = "<group>"; };
		F9B6505B1FAAF4AF00EB783A /* #205. Isomorphic Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#205. Isomorphic Strings.playground"; sourceTree = "<group>"; };
		F9B6505C1FAAF4AF00EB783A /* #27. Remove Element.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#27. Remove Element.playground"; sourceTree = "<group>"; };
		F9B6505D1FAAF4AF00EB783A /* #258. Add Digits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#258. Add Digits.playground"; sourceTree = "<group>"; };
		F9B6505E1FAAF4B000EB783A /* #35. Search Insert Position.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#35. Search Insert Position.playground"; sourceTree = "<group>"; };
		F9B6505F1FAAF4B000EB783A /* #566. Reshape the Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#566. Reshape the Matrix.playground"; sourceTree = "<group>"; };
		F9B650601FAAF4B000EB783A /* #653. Two Sum IV - Input is a BST.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#653. Two Sum IV - Input is a BST.playground"; sourceTree = "<group>"; };
		F9B650611FAAF4B000EB783A /* #1. Two Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#1. Two Sum.playground"; sourceTree = "<group>"; };
		F9B650621FAAF4B000EB783A /* #26. Remove Duplicates from Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#26. Remove Duplicates from Sorted Array.playground"; sourceTree = "<group>"; };
		F9B650631FAAF4B100EB783A /* #620. Not Boring Movies.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#620. Not Boring Movies.playground"; sourceTree = "<group>"; };
		F9B650641FAAF4B100EB783A /* #235. Lowest Common Ancestor of a Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#235. Lowest Common Ancestor of a Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B650651FAAF4B100EB783A /* #645. Set Mismatch.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#645. Set Mismatch.playground"; sourceTree = "<group>"; };
		F9B650661FAAF4B100EB783A /* #181. Employees Earning More Than Their Managers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#181. Employees Earning More Than Their Managers.playground"; sourceTree = "<group>"; };
		F9B650671FAAF4B100EB783A /* #628. Maximum Product of Three Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#628. Maximum Product of Three Numbers.playground"; sourceTree = "<group>"; };
		F9B650681FAAF4B100EB783A /* #108. Convert Sorted Array to Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#108. Convert Sorted Array to Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B650691FAAF4B200EB783A /* #521. Longest Uncommon Subsequence I.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#521. Longest Uncommon Subsequence I.playground"; sourceTree = "<group>"; };
		F9B6506A1FAAF4B200EB783A /* #595. Big Countries.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#595. Big Countries.playground"; sourceTree = "<group>"; };
		F9B6506B1FAAF4B200EB783A /* #112. Path Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#112. Path Sum.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B6506C1FAAF4B200EB783A /* #206. Reverse Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#206. Reverse Linked List.playground"; sourceTree = "<group>"; };
		F9B6506D1FAAF4B200EB783A /* #118. Pascal's Triangle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#118. Pascal's Triangle.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B6506E1FAAF4B300EB783A /* #349. Intersection of Two Arrays.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#349. Intersection of Two Arrays.playground"; sourceTree = "<group>"; };
		F9B6506F1FAAF4B300EB783A /* #448. Find All Numbers Disappeared in an Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#448. Find All Numbers Disappeared in an Array.playground"; sourceTree = "<group>"; };
		F9B650701FAAF4B300EB783A /* #242. Valid Anagram.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#242. Valid Anagram.playground"; sourceTree = "<group>"; };
		F9B650711FAAF4B300EB783A /* #434. Number of Segments in a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#434. Number of Segments in a String.playground"; sourceTree = "<group>"; };
		F9B650721FAAF4B300EB783A /* #492. Construct the Rectangle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#492. Construct the Rectangle.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9B650731FAAF4B400EB783A /* #345. Reverse Vowels of a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#345. Reverse Vowels of a String.playground"; sourceTree = "<group>"; };
		F9B650741FAAF4B400EB783A /* #100. Same Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#100. Same Tree.playground"; sourceTree = "<group>"; };
		F9C2C89C1FB2B0560016E1D1 /* #290. Word Pattern.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#290. Word Pattern.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		F9DFEFE51FAF4B4C007A77D7 /* #507. Perfect Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "#507. Perfect Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		F9A5F84D1FAAD3B200A306EA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		F9A5F8471FAAD3B200A306EA = {
			isa = PBXGroup;
			children = (
				F9A5F8521FAAD3B200A306EA /* LeetCode */,
				F9A5F8511FAAD3B200A306EA /* Products */,
			);
			sourceTree = "<group>";
		};
		F9A5F8511FAAD3B200A306EA /* Products */ = {
			isa = PBXGroup;
			children = (
				F9A5F8501FAAD3B200A306EA /* LeetCode.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		F9A5F8521FAAD3B200A306EA /* LeetCode */ = {
			isa = PBXGroup;
			children = (
				F9A5F8651FAAD41700A306EA /* #205. Isomorphic Strings.playground */,
				F9B650611FAAF4B000EB783A /* #1. Two Sum.playground */,
				F9B650271FAAF4A300EB783A /* #9. Palindrome Number.playground */,
				F9B650321FAAF4A600EB783A /* #13. Roman to Integer.playground */,
				F9050C431FB0847E00B4370B /* #20. Valid Parentheses.playground */,
				F9B6504F1FAAF4AB00EB783A /* #21. Merge Two Sorted Lists.playground */,
				F9B650621FAAF4B000EB783A /* #26. Remove Duplicates from Sorted Array.playground */,
				F9B6505C1FAAF4AF00EB783A /* #27. Remove Element.playground */,
				F9B6505E1FAAF4B000EB783A /* #35. Search Insert Position.playground */,
				F9B650351FAAF4A600EB783A /* #38. Count and Say.playground */,
				F9B650381FAAF4A700EB783A /* #53. Maximum Subarray.playground */,
				F9B650551FAAF4AD00EB783A /* #66. Plus One.playground */,
				F90B7DC71FB41D7E00D3BF28 /* #67. Add Binary.playground */,
				F9B6503F1FAAF4A800EB783A /* #70. Climbing Stairs.playground */,
				F9B650071FAAF49F00EB783A /* #83. Remove Duplicates from Sorted List.playground */,
				F9B650741FAAF4B400EB783A /* #100. Same Tree.playground */,
				F9B650431FAAF4A900EB783A /* #101. Symmetric Tree.playground */,
				F9B6503E1FAAF4A800EB783A /* #104. Maximum Depth of Binary Tree.playground */,
				F9B6500B1FAAF49F00EB783A /* #107. Binary Tree Level Order Traversal II.playground */,
				F9B650681FAAF4B100EB783A /* #108. Convert Sorted Array to Binary Search Tree.playground */,
				F9B6501A1FAAF4A100EB783A /* #110. Balanced Binary Tree.playground */,
				F9943DC21FB164D800C7705E /* #111. Minimum Depth of Binary Tree.playground */,
				F9B6506B1FAAF4B200EB783A /* #112. Path Sum.playground */,
				F9B6506D1FAAF4B200EB783A /* #118. Pascal's Triangle.playground */,
				F9B6504E1FAAF4AB00EB783A /* #119. Pascal's Triangle II.playground */,
				F9B6500D1FAAF49F00EB783A /* #121. Best Time to Buy and Sell Stock.playground */,
				F9B650341FAAF4A600EB783A /* #122. Best Time to Buy and Sell Stock II.playground */,
				F9B650391FAAF4A700EB783A /* #136. Single Number.playground */,
				F9B6501B1FAAF4A100EB783A /* #167. Two Sum II - Input array is sorted.playground */,
				F9B6504A1FAAF4AA00EB783A /* #169. Majority Element.playground */,
				F9B650181FAAF4A000EB783A /* #171. Excel Sheet Column Number.playground */,
				F9B650401FAAF4A800EB783A /* #172. Factorial Trailing Zeroes.playground */,
				F9B6502B1FAAF4A400EB783A /* #175. Combine Two Tables.playground */,
				F9B650661FAAF4B100EB783A /* #181. Employees Earning More Than Their Managers.playground */,
				F9B650061FAAF49F00EB783A /* #182. Duplicate Emails.playground */,
				F9584B671FAC0F5200D76BF3 /* #183. Customers Who Never Order.playground */,
				F9B6504B1FAAF4AA00EB783A /* #198. House Robber.playground */,
				F9B650371FAAF4A700EB783A /* #202. Happy Number.playground */,
				F9B6505B1FAAF4AF00EB783A /* #205. Isomorphic Strings.playground */,
				F9B6506C1FAAF4B200EB783A /* #206. Reverse Linked List.playground */,
				F9B650081FAAF49F00EB783A /* #217. Contains Duplicate.playground */,
				F9B6501F1FAAF4A200EB783A /* #226. Invert Binary Tree.playground */,
				F9B6500E1FAAF49F00EB783A /* #231. Power of Two.playground */,
				F9B650641FAAF4B100EB783A /* #235. Lowest Common Ancestor of a Binary Search Tree.playground */,
				F9B650701FAAF4B300EB783A /* #242. Valid Anagram.playground */,
				F9B6501C1FAAF4A100EB783A /* #257. Binary Tree Paths.playground */,
				F9B6505D1FAAF4AF00EB783A /* #258. Add Digits.playground */,
				F9B650521FAAF4AB00EB783A /* #263. Ugly Number.playground */,
				F9B650291FAAF4A400EB783A /* #268. Missing Number.playground */,
				F9B6501D1FAAF4A100EB783A /* #283. Move Zeroes.playground */,
				F9C2C89C1FB2B0560016E1D1 /* #290. Word Pattern.playground */,
				F9B650541FAAF4AC00EB783A /* #292. Nim Game.playground */,
				F9B650121FAAF4A000EB783A /* #326. Power of Three.playground */,
				F9B650091FAAF49F00EB783A /* #342. Power of Four.playground */,
				F9B650161FAAF4A000EB783A /* #344. Reverse String.playground */,
				F9B650731FAAF4B400EB783A /* #345. Reverse Vowels of a String.playground */,
				F9B6506E1FAAF4B300EB783A /* #349. Intersection of Two Arrays.playground */,
				F9B650281FAAF4A400EB783A /* #350. Intersection of Two Arrays II.playground */,
				F9B650501FAAF4AB00EB783A /* #367. Valid Perfect Square.playground */,
				F9B650171FAAF4A000EB783A /* #371. Sum of Two Integers.playground */,
				F9B6500A1FAAF49F00EB783A /* #383. Ransom Note.playground */,
				F9B650531FAAF4AC00EB783A /* #387. First Unique Character in a String.playground */,
				F9B650471FAAF4A900EB783A /* #389. Find the Difference.playground */,
				F9B6502D1FAAF4A500EB783A /* #401. Binary Watch.playground */,
				F9B650331FAAF4A600EB783A /* #404. Sum of Left Leaves.playground */,
				F9B650191FAAF4A000EB783A /* #405. Convert a Number to Hexadecimal.playground */,
				F9B6504D1FAAF4AA00EB783A /* #409. Longest Palindrome.playground */,
				F9B650151FAAF4A000EB783A /* #412. Fizz Buzz.playground */,
				F9B6502F1FAAF4A500EB783A /* #415. Add Strings.playground */,
				F9B650711FAAF4B300EB783A /* #434. Number of Segments in a String.playground */,
				F9B650561FAAF4AE00EB783A /* #437. Path Sum III.playground */,
				F9256B2F1FADB860002E24B4 /* #438. Find All Anagrams in a String.playground */,
				F9B6503C1FAAF4A700EB783A /* #441. Arranging Coins.playground */,
				F9B6503A1FAAF4A700EB783A /* #447. Number of Boomerangs.playground */,
				F9B6506F1FAAF4B300EB783A /* #448. Find All Numbers Disappeared in an Array.playground */,
				F9B650141FAAF4A000EB783A /* #453. Minimum Moves to Equal Array Elements.playground */,
				F9B650131FAAF4A000EB783A /* #455. Assign Cookies.playground */,
				F9B650481FAAF4AA00EB783A /* #458. Poor Pigs.playground */,
				F9B650111FAAF49F00EB783A /* #459. Repeated Substring Pattern.playground */,
				F9B650201FAAF4A200EB783A /* #461. Hamming distance.playground */,
				F9B650421FAAF4A800EB783A /* #463. Island Perimeter.playground */,
				F9B650441FAAF4A900EB783A /* #476. Number Complement.playground */,
				F9B650301FAAF4A500EB783A /* #485. Max Consecutive Ones.playground */,
				F9B650721FAAF4B300EB783A /* #492. Construct the Rectangle.playground */,
				F9B6500C1FAAF49F00EB783A /* #496. Next Greater Element I.playground */,
				F9B650511FAAF4AB00EB783A /* #500. Keyboard Row.playground */,
				F9B6501E1FAAF4A100EB783A /* #501. Find Mode in Binary Search Tree.playground */,
				F9B6504C1FAAF4AA00EB783A /* #504. Base 7.playground */,
				F9B6500F1FAAF49F00EB783A /* #506. Relative Ranks.playground */,
				F9DFEFE51FAF4B4C007A77D7 /* #507. Perfect Number.playground */,
				F9B650251FAAF4A300EB783A /* #520. Detect Capital.playground */,
				F9B650691FAAF4B200EB783A /* #521. Longest Uncommon Subsequence I.playground */,
				F9B650411FAAF4A800EB783A /* #530. Minimum Absolute Difference in BST.playground */,
				F9B6503B1FAAF4A700EB783A /* #538. Convert BST to Greater Tree.playground */,
				F9B650101FAAF49F00EB783A /* #541. Reverse String II.playground */,
				F9B650571FAAF4AE00EB783A /* #543. Diameter of Binary Tree.playground */,
				F9B650311FAAF4A500EB783A /* #551. Student Attendance Record I.playground */,
				F9B6502A1FAAF4A400EB783A /* #557. Reverse Words in a String III.playground */,
				F9B650211FAAF4A200EB783A /* #561. Array Partition I.playground */,
				F9B650461FAAF4A900EB783A /* #563. Binary Tree Tilt.playground */,
				F9B6505F1FAAF4B000EB783A /* #566. Reshape the Matrix.playground */,
				F9B6503D1FAAF4A800EB783A /* #572. Subtree of Another Tree.playground */,
				F9B650581FAAF4AE00EB783A /* #575. Distribute Candies.playground */,
				F9B650261FAAF4A300EB783A /* #594. Longest Harmonious Subsequence.playground */,
				F9B6506A1FAAF4B200EB783A /* #595. Big Countries.playground */,
				F9B6502E1FAAF4A500EB783A /* #598. Range Addition II.playground */,
				F9B650361FAAF4A600EB783A /* #599. Minimum Index Sum of Two Lists.playground */,
				F9B650221FAAF4A200EB783A /* #606. Construct String from Binary Tree.playground */,
				F9B650451FAAF4A900EB783A /* #617. Merge Two Binary Trees.playground */,
				F9B650631FAAF4B100EB783A /* #620. Not Boring Movies.playground */,
				F9B6505A1FAAF4AF00EB783A /* #627. Swap Salary.playground */,
				F9B650671FAAF4B100EB783A /* #628. Maximum Product of Three Numbers.playground */,
				F9B650591FAAF4AE00EB783A /* #637. Average of Levels in Binary Tree.playground */,
				F9B650491FAAF4AA00EB783A /* #643. Maximum Average Subarray I.playground */,
				F9B650651FAAF4B100EB783A /* #645. Set Mismatch.playground */,
				F9B650601FAAF4B000EB783A /* #653. Two Sum IV - Input is a BST.playground */,
				F9B6502C1FAAF4A400EB783A /* #657. Judge Route Circle.playground */,
				F9B650241FAAF4A300EB783A /* #661. Image Smoother.playground */,
				F9B650231FAAF4A300EB783A /* #671. Second Minimum Node In a Binary Tree.playground */,
				F9A5F85F1FAAD3B200A306EA /* Info.plist */,
			);
			path = LeetCode;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		F9A5F84F1FAAD3B200A306EA /* LeetCode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F9A5F8621FAAD3B200A306EA /* Build configuration list for PBXNativeTarget "LeetCode" */;
			buildPhases = (
				F9A5F84C1FAAD3B200A306EA /* Sources */,
				F9A5F84D1FAAD3B200A306EA /* Frameworks */,
				F9A5F84E1FAAD3B200A306EA /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LeetCode;
			productName = LeetCode;
			productReference = F9A5F8501FAAD3B200A306EA /* LeetCode.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		F9A5F8481FAAD3B200A306EA /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 0900;
				LastUpgradeCheck = 0900;
				ORGANIZATIONNAME = JayWang;
				TargetAttributes = {
					F9A5F84F1FAAD3B200A306EA = {
						CreatedOnToolsVersion = 9.0.1;
						ProvisioningStyle = Automatic;
					};
				};
			};
			buildConfigurationList = F9A5F84B1FAAD3B200A306EA /* Build configuration list for PBXProject "LeetCode" */;
			compatibilityVersion = "Xcode 8.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = F9A5F8471FAAD3B200A306EA;
			productRefGroup = F9A5F8511FAAD3B200A306EA /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				F9A5F84F1FAAD3B200A306EA /* LeetCode */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		F9A5F84E1FAAD3B200A306EA /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		F9A5F84C1FAAD3B200A306EA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		F9A5F8601FAAD3B200A306EA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		F9A5F8611FAAD3B200A306EA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		F9A5F8631FAAD3B200A306EA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = B4EV95UGWL;
				INFOPLIST_FILE = LeetCode/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = com.JayWang.LeetCode;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 4.0;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		F9A5F8641FAAD3B200A306EA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = B4EV95UGWL;
				INFOPLIST_FILE = LeetCode/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = com.JayWang.LeetCode;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 4.0;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		F9A5F84B1FAAD3B200A306EA /* Build configuration list for PBXProject "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F9A5F8601FAAD3B200A306EA /* Debug */,
				F9A5F8611FAAD3B200A306EA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		F9A5F8621FAAD3B200A306EA /* Build configuration list for PBXNativeTarget "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F9A5F8631FAAD3B200A306EA /* Debug */,
				F9A5F8641FAAD3B200A306EA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = F9A5F8481FAAD3B200A306EA /* Project object */;
}
